<project default="all" >

        <property name="mavenHome" value="C:\Program Files\Appache\apache-maven-3.2.5"/>
        <property name="gitLocation" value="C:\Program Files (x86)\Git\bin\git.exe"/>

        <property name="localRepository" value="C:\Users\wanderer\Desktop\libs"/>
        <property name="sourceRepositoryUrls" value="https://github.com/angelozerr/tern.java.git,https://github.com/datastax/java-driver.git"/>

        <property name="https://github.com/angelozerr/tern.java.git.branch" value="master"/>
        <property name="https://github.com/datastax/java-driver.git.branch" value="2.1"/>
        <property name="https://github.com/angelozerr/tern.java.git.pom" value="tern.java"/>
        <property name="https://github.com/datastax/java-driver.git.pom" value="java-driver"/>

        <property name="https://github.com/angelozerr/tern.java.git.project" value="tern.java"/>
        <property name="https://github.com/datastax/java-driver.git.project" value="java-driver"/>

        <property name="https://github.com/angelozerr/tern.java.git.modules" value="core,eclipse"/>
        <property name="https://github.com/datastax/java-driver.git.modules" value="driver-core,driver-mapping"/>

        <target name="all">
            <antcall target="bootstrap"/>
            <antcall target="cleanAll"/>
            <antcall target="creatingNeededDirs"/>

            <antcall target="cloneSource"/>
            <antcall target="zipSource"/>

            <antcall target="buildSource"/>
            <antcall target="zipLocalRepository"/>

            <antcall target="getRepositoriesArtifacts"/>
            <antcall target="zipArtifacts"/>

            <antcall target="deleteSourcesAndLocalRepo"/>
        </target>

         <target name="bootstrap">
            <mkdir dir="${user.home}/.ant/lib"/>
            <get dest="${user.home}/.ant/lib/ant-contrib.jar" src="http://search.maven.org/remotecontent?filepath=ant-contrib/ant-contrib/1.0b3/ant-contrib-1.0b3.jar"/>
         </target>

        <target name="cleanAll">
            <delete dir="sources"/>
            <delete dir="archives"/>
            <delete dir="archives/install"/>
            <delete dir="archives/sources"/>
         <!--   <delete dir="${localRepository}"/>  -->

        </target>

        <target name="creatingNeededDirs">
            <mkdir dir="sources"/>
            <mkdir dir="archives"/>
            <mkdir dir="archives/install"/>
            <mkdir dir="archives/sources"/>
            <mkdir dir="${localRepository}"/>
        </target>

        <target name="cloneSource">
            <for  param="repoUrl" list="${sourceRepositoryUrls}">
                <sequential>
                    <clone repoUrl="@{repoUrl}"/>
                </sequential>
            </for>
        </target>

        <macrodef name="clone">
            <attribute name="repoUrl"/>
            <sequential>
                <exec executable="cmd">
                    <arg value="/c"/>
                    <arg value="git-cloning.bat"/>
                    <arg value="sources"/>
                    <arg value="${gitLocation}"/>
                    <arg value="${@{repoUrl}.branch}"/>
                    <arg value="@{repoUrl}"/>
                    <arg value="-p"/>
                </exec>
            </sequential>
        </macrodef>

         <target name="zipSource">

             <for  param="repoUrl" list="${sourceRepositoryUrls}">
                 <sequential>
                     <zip destfile="archives/sources/${@{repoUrl}.project}-sources.zip"  basedir="sources/${@{repoUrl}.project}"
                          update="true"/>
                 </sequential>
             </for>
        </target>

        <target name="buildSource">
            <for  param="repoUrl" list="${sourceRepositoryUrls}">
                <sequential>
                    <build repoUrl="@{repoUrl}"/>
                </sequential>
            </for>
        </target>

        <macrodef name="build">
            <attribute name="repoUrl"/>
            <sequential>
                <exec executable="cmd">
                    <arg value="/c"/>
                    <arg value="build.bat"/>
                    <arg value="sources/${@{repoUrl}.pom}"/>
                    <arg value="-p"/>
                </exec>
            </sequential>
        </macrodef>

        <target name="zipLocalRepository">
            <zip destfile="archives/maven-repository.zip"  basedir="${localRepository}"
                update="true"/>

            <zip destfile="archives/sources.zip"  basedir="archives/sources"
                 update="true"/>
            <delete dir="archives/sources"/>
        </target>

        <target name="getRepositoriesArtifacts">
            <for  param="repoUrl" list="${sourceRepositoryUrls}">
                <sequential>
                    <mkdir dir="archives/install/${@{repoUrl}.project}"/>
                    <getModulesArtifacts repoUrl="@{repoUrl}"/>
                </sequential>
            </for>
        </target>

        <macrodef name="getModulesArtifacts">
            <attribute name="repoUrl"/>
            <sequential>
                <for  param="modulePath" list="${@{repoUrl}.modules}">
                    <sequential>
                        <copy todir="archives/install/${@{repoUrl}.project}/@{modulePath}">
                            <fileset dir="sources/${@{repoUrl}.project}/@{modulePath}" includes="**/target/*.jar, **/target/*.war, **/target/*.ear"/>
                        </copy>
                    </sequential>
                </for>
            </sequential>
        </macrodef>

        <target name="zipArtifacts">
            <zip destfile="archives/install.zip"  basedir="archives/install"
                 update="true"/>
            <delete dir="archives/install"/>
        </target>

        <target name="deleteSourcesAndLocalRepo">
            <delete dir="sources"/>
           <!-- <delete dir="${localRepository}"/> -->
            <delete dir="archives/install"/>
        </target>

        <taskdef resource="net/sf/antcontrib/antlib.xml"/>
    </project>