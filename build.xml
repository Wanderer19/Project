<project default="all" >

    <property name="sourceRepositoryUrl" value="https://github.com/angelozerr/tern.java.git"/>
    <property name="branchName" value="master"/>
    <property name="modulePaths" value="tern.java\core,tern.java\eclipse"/>
    <property name="pomPath" value="tern.java"/>

    <!--
        NEW
     -->
        <property name="mavenHome" value="C:\Program Files\Appache\apache-maven-3.2.5"/>
        <property name="localRepository" value="C:\Users\wanderer\Desktop\repository"/>
        <property name="gitLocation" value="C:\Program Files (x86)\Git\bin\git.exe"/>



        <property name="sourceRepositoryUrls" value="https://github.com/angelozerr/tern.java.git,https://github.com/datastax/java-driver.git"/>

        <property name="https://github.com/angelozerr/tern.java.git.branch" value="master"/>
        <property name="https://github.com/datastax/java-driver.git.branch" value="2.1"/>
        <property name="https://github.com/angelozerr/tern.java.git.pom" value="tern.java"/>
        <property name="https://github.com/datastax/java-driver.git.pom" value="java-driver"/>

        <property name="https://github.com/angelozerr/tern.java.git.project" value="tern.java"/>
        <property name="https://github.com/datastax/java-driver.git.project" value="java-driver"/>

        <property name="https://github.com/angelozerr/tern.java.git.modules" value="core,eclipse"/>
        <property name="https://github.com/datastax/java-driver.git.modules" value="driver-core,driver-mapping"/>
    <!--
         NEW END
      -->


        <target name="all">
            <!--
                Идти по всем репозиториям
                возможно написаь макрос, который все сделает для проекта, атрибут - url
            -->
            <antcall target="bootstrap"/>
            <antcall target="cleanAll"/>
            <antcall target="creatingNeededDirs"/>

            <for  param="repoUrl" list="${sourceRepositoryUrls}">
                <sequential>
                    <gitTask repoUrl="@{repoUrl}"/>
                </sequential>
            </for>

            <!--
                zip sources
            -->

            <antcall target="zipsSources"/>

            <!--
                build
            -->

            <for  param="repoUrl" list="${sourceRepositoryUrls}">
                <sequential>
                    <buildTask repoUrl="@{repoUrl}"/>
                </sequential>
            </for>

            <!--
                zip libs
            -->

            <antcall target="zipLibs"/>

            <!--
                zip modules
            -->

            <for  param="repoUrl" list="${sourceRepositoryUrls}">
                <sequential>
                    <mkdir dir="archives/install/${@{repoUrl}.project}"/>
                    <modulesTask repoUrl="@{repoUrl}"/>
                </sequential>
            </for>

            <!--
                delete
            -->
            <antcall target="deleteSourcesAndLocalRepo"/>
        </target>


        <macrodef name="gitTask">
            <attribute name="repoUrl"/>
            <sequential>
                <exec executable="cmd">
                    <arg value="/c"/>
                    <arg value="git-cloning.bat"/>
                    <arg value="sources"/>
                    <arg value="${gitLocation}"/>
                    <arg value="${@{repoUrl}.branch}"/>
                    <arg value="@{repoUrl}"/>
                    <arg value="-p"/>
                </exec>
            </sequential>
        </macrodef>

        <macrodef name="buildTask">
            <attribute name="repoUrl"/>
            <sequential>
                <exec executable="cmd">
                    <arg value="/c"/>
                    <arg value="build.bat"/>
                    <arg value="sources/${@{repoUrl}.pom}"/>
                    <arg value="-p"/>
                </exec>
            </sequential>
        </macrodef>

        <macrodef name="modulesTask">
            <attribute name="repoUrl"/>
            <sequential>
                <for  param="modulePath" list="${@{repoUrl}.modules}">
                    <sequential>
                        <copy todir="archives/install/${@{repoUrl}.project}/@{modulePath}">
                            <fileset dir="sources/${@{repoUrl}.project}/@{modulePath}" includes="**/target/*.jar, **/target/*.war, **/target/*.ear"/>
                        </copy>
                    </sequential>
                </for>

                <zip destfile="archives/install.zip"  basedir="archives/install"
                     update="true"/>
                <delete dir="archives/install"/>
            </sequential>
        </macrodef>


        <target name="main">
            <antcall target="bootstrap"/>
            <antcall target="cleanAll"/>
            <antcall target="creatingNeededDirs"/>
            <antcall target="gitCloning"/>
            <antcall target="zipsSources"/>
            <antcall target="building"/>
            <antcall target="zipLibs"/>
            <antcall target="zipModules"/>
            <antcall target="deleteSourcesAndLocalRepo"/>
        </target>

        <target name="bootstrap">
            <mkdir dir="${user.home}/.ant/lib"/>
            <get dest="${user.home}/.ant/lib/ant-contrib.jar" src="http://search.maven.org/remotecontent?filepath=ant-contrib/ant-contrib/1.0b3/ant-contrib-1.0b3.jar"/>
        </target>

        <target name="cleanAll">
            <delete dir="sources"/>
            <delete dir="archives"/>
            <delete dir="archives/install"/>
        </target>

        <target name="creatingNeededDirs">
            <mkdir dir="sources"/>
            <mkdir dir="archives"/>
            <mkdir dir="archives/install"/>
        </target>

        <target name="gitCloning">
            <exec executable="cmd">
                <arg value="/c"/>
                <arg value="git-cloning.bat"/>
                <arg value="sources"/>
                <arg value="${gitLocation}"/>
                <arg value="${branchName}"/>
                <arg value="${sourceRepositoryUrl}"/>
                <arg value="-p"/>
            </exec>
        </target>

        <target name="zipsSources">
            <zip destfile="archives/sources.zip"  basedir="sources"
                 update="true"/>
        </target>

        <target name="building">
            <sequential>
                <exec executable="cmd">
                    <arg value="/c"/>
                    <arg value="build.bat"/>
                    <arg value="sources/${pomPath}"/>
                    <arg value="-p"/>
                </exec>
            </sequential>
        </target>

        <target name="zipLibs">
            <zip destfile="archives/libs.zip"  basedir="${localRepository}"
                 update="true"/>
        </target>

        <target name="zipModules">
            <for  param="modulePath" list="${modulePaths}">
                <sequential>
                    <copy todir="archives/modules">
                        <fileset dir="sources/@{modulePath}" includes="**/target/*.jar, **/target/*.war, **/target/*.ear"/>
                    </copy>
                </sequential>
            </for>
            <zip destfile="archives/modules.zip"  basedir="archives/modules"
                 update="true"/>
        </target>

        <target name="deleteSourcesAndLocalRepo">

            <delete dir="${localRepository}"/>
            <delete dir="archives/modules"/>
        </target>

        <taskdef resource="net/sf/antcontrib/antlib.xml"/>
    </project>